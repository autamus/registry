name: "Automatic Binoc Scan"

on:
  schedule:
    - cron: '0 14 * * *'
  workflow_dispatch:
    
jobs:
  upstream-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Run Binoc Upstream Scan
        uses: autamus/binoc@main
        with:
          git_token: ${{ secrets.BINOC_GIT_TOKEN }}
          general_action: 'true'
          pr_skip: 'true'
          repo_upstreamonly: 'true'
          repo_spackupstreamlink: 'https://raw.githubusercontent.com/spack/spack/develop/var/spack/repos/builtin/packages/{{package}}/package.py'
      
      - name: Push Changes to Main
        run: |
          export BRANCH_FROM="binoc/upstream"
          git remote set-url origin "https://x-access-token:${{secrets.BINOC_GIT_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
          BRANCH_EXISTS=$(git ls-remote --heads origin ${BRANCH_FROM})
          if [[ -z ${BRANCH_EXISTS} ]]; then
              printf "Branch does not exist in remote.\n"
          else
              printf "Branch already exists in remote.\n"
              exit 1
          fi
          git branch
          git checkout -b "${BRANCH_FROM}" || git checkout "${BRANCH_FROM}"
          git branch
          git config --global user.name "${{ secrets.BINOC_GIT_NAME }}"
          git config --global user.email "${{ secrets.BINOC_GIT_EMAIL }}"
          git add spack/*
          git status
          if git diff-index --quiet HEAD --; then
             export OPEN_PULL_REQUEST=0
             printf "No changes\n"
          else
             printf "Changes\n"
             git commit -a -m "Automated pull of changes from Upstream Spack $(date '+%Y-%m-%d')"
             git push
          fi
          echo "OPEN_PULL_REQUEST=${OPEN_PULL_REQUEST}" >> $GITHUB_ENV
          echo "PULL_REQUEST_FROM_BRANCH=${BRANCH_FROM}" >> $GITHUB_ENV
          echo "PULL_REQUEST_TITLE=[bot] ${BRANCH_FROM}" >> $GITHUB_ENV
          echo "PULL_REQUEST_BODY=Update Packages from Spack Upstream" >> $GITHUB_ENV

      - name: Open Pull Request
        uses: vsoch/pull-request-action@1.0.16
        if: ${{ env.OPEN_PULL_REQUEST == '1' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BRANCH: "main"

  update-scan:
    runs-on: ubuntu-latest
    needs:
      - upstream-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Run Binoc Scan
        uses: autamus/binoc@main
        with:
          git_token: ${{ secrets.BINOC_GIT_TOKEN }}
          git_username: ${{ secrets.BINOC_GIT_USERNAME }}
          git_email: ${{ secrets.BINOC_GIT_EMAIL }}
          git_name: ${{ secrets.BINOC_GIT_NAME }}
          general_action: 'true'
