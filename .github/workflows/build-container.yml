name: "Build Containers on Update"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  build-config:
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.save-output.outputs.package }}
      version: ${{ steps.save-output.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
        
      - name: Run Build Config
        uses: autamus/buildconfig@v0.0.5
        with:
          parsers_loaded: spack
          packages_path: spack/
      
      - name: Save Package Output
        id: save-output
        run: |
          echo "::set-output name=package::$(cat package)"
          echo "::set-output name=version::$(cat version)"
  spack-containerize:
    runs-on: ubuntu-latest
    needs: build-config
    container:
      image: spack/ubuntu-bionic
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate Spack Environment Dockerfile
        run: |
          export PATH=/opt/spack/bin:$PATH
          package=${{needs.build-config.outputs.package}}
          echo "spack:" > spack.yaml
          echo "  specs: [\"$package\"]" >> spack.yaml
          echo "  view: true" >> spack.yaml
          echo "  container:" >> spack.yaml
          echo "    os_packages:" >> spack.yaml
          echo "      build:" >> spack.yaml
          echo "        - python3-dev" >> spack.yaml
          echo "      final:" >> spack.yaml
          echo "        - ca-certificates" >> spack.yaml
          echo "    strip: false" >> spack.yaml
          cat spack.yaml
          spack containerize > Dockerfile
          
      - name: Change Entrypoint of Containers
        run : |
          sed -i 's/\"-l\".*]/\"-l\", \"-c\"]/g' Dockerfile
          sed -i '/^.*ubuntu:18.04.*/a \\ \nENV PATH=/opt/view/bin:/opt/spack/bin:$PATH' Dockerfile
          
      - name: Upload Dockerfile
        uses: actions/upload-artifact@v2
        with:
          name: Dockerfile
          path: Dockerfile
           
  build-container:
    needs:
      - spack-containerize
      - build-config
    runs-on: self-hosted
    timeout-minutes: 720
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download Dockerfile
        uses: actions/download-artifact@v2
        with:
          name: Dockerfile

      - name: Import Registry to Repo
        run: |
          mkdir repo
          for file in spack/*/*; do
            if [ -d "$file" ]; then
                cp -r "$file/" "repo/"
            fi
          done
          sed -i '/^.*as builder.*/a \\nADD repo /opt/spack/var/spack/repos/builtin/packages/' Dockerfile
          
      - name: Build Container for Package
        run: |
          package=${{needs.build-config.outputs.package}}
          version=${{needs.build-config.outputs.version}}
          docker build -t ghcr.io/autamus/$package:latest \
                       -t ghcr.io/autamus/$package:$version .
      - name: Docker Login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Push to GitHub Packages
        # Don't push build on pull request
        if: github.ref == 'refs/heads/main'
        run: docker push --all-tags ghcr.io/autamus/${{needs.build-config.outputs.package}}
